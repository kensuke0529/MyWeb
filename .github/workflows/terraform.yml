on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init
        working-directory: ./

      - name: Terraform Import myweb bucket
        run: terraform import aws_s3_bucket.myweb kensuke-terraform-web-log-123
        working-directory: ./
        continue-on-error: true

      - name: Terraform Import mylogs bucket
        run: terraform import aws_s3_bucket.mylogs kensuke-terraform-website-123
        working-directory: ./
        continue-on-error: true

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./

      - name: Get Terraform outputs
        id: tf_outputs
        run: |
          cf_dist_id=$(terraform output -raw cloudfront_distribution_id)
          website_bucket=$(terraform output -raw website_bucket)
          echo "cf_dist_id=$cf_dist_id" >> $GITHUB_OUTPUT
          echo "website_bucket=$website_bucket" >> $GITHUB_OUTPUT
        working-directory: ./

      - name: List static website files
        run: ls -l ./my-website

      - name: Sync static site to S3
        run: aws s3 sync ./my-website s3://${{ steps.tf_outputs.outputs.website_bucket }} --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ steps.tf_outputs.outputs.cf_dist_id }} \
            --paths "/*"

